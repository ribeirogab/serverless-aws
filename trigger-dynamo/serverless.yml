service: trigger-dynamo

frameworkVersion: '2'

plugins:
  - serverless-plugin-typescript

custom:
  serviceName: ${sls:stage}-trigger-dynamo


provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stackName: ${self:custom.serviceName}
  apiName: ${self:custom.serviceName}
  environment:
    DYNAMODB_TABLE: Heroes
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

resources:
  Resources:
    HeroesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

functions:
  create-hero:
    name: ${self:custom.serviceName}-create-hero
    handler: src/handler.createHero
    events:
    - http:
        path: heroes
        method: post
        cors: true
